#############################
# Versions (central control)
#############################
[versions]
agp = "8.13.0"                 # Android Gradle Plugin
kotlin = "2.2.20"              # Kotlin compiler + stdlib
coreKtx = "1.17.0"             # androidx.core
lifecycleRuntimeKtx = "2.9.4"  # Lifecycle runtime (coroutines)
activityCompose = "1.11.0"     # Activity integration for Compose
navigation = "2.9.5"           # Navigation-Compose
window = "1.5.0"               # Jetpack WindowManager (foldables/metrics)
hilt = "2.57.2"                # Dagger Hilt
hilt-nav-compose = "1.2.0"
ksp = "2.2.20-2.0.3"
javapoet = "1.13.0"
camera-x = "1.5.0"
z-xing = "3.5.2"


# BOM versions
composeBom = "2025.09.01" # Compose BOM (pins all compose artifacts)
okhttp-bom = "5.1.0"
retrofit-bom = "3.0.0"


# Test libs
junit = "4.13.2"
junitVersion = "1.3.0"
espressoCore = "3.7.0"
uiGraphics = "1.9.2"
foundationLayout = "1.9.2"


#############################
# Libraries
#############################
[libraries]

# ---- Compose platform/BOM ----
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" } # import with platform()

javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }

# ----- Kotlin -------#
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.9.0" }

# ---- Compose UI/Core (version comes from BOM) ----
androidx-ui = { group = "androidx.compose.ui", name = "ui" }                           # Core runtime for Compose UI
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }         # Graphics APIs (Brush, ImageBitmap, etc.)
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }           # Preview tooling (debug-only)
androidx-compose-material-icons-core = { group = "androidx.compose.material", name = "material-icons-core" }
androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" } # @Preview runtime deps

# ---- Material 3 + adaptive size classes (from BOM) ----
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }      # Material 3 components
androidx-material3-window-size = { group = "androidx.compose.material3", name = "material3-window-size-class" } # WindowSizeClass APIs

# OkHttp BOM
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp-bom" }
okHttp3 = { module = "com.squareup.okhttp3:okhttp" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor" }

# Retrofit BOM
retrofit-bom = { module = "com.squareup.retrofit2:retrofit-bom", version.ref = "retrofit-bom" }
retrofit-retrofit = { module = "com.squareup.retrofit2:retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson" }
retrofit-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars" }

# Hilt core
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-nav-compose" }

#CameraX
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera-x" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera-x" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera-x" }
#androidx.camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "camera-x" }

# ZXing for QR code scanning
zxing-core = { module = "com.google.zxing:core", version.ref = "z-xing" }
#zxing-android-embedded = { module = "com.journeyapps:zxing-android-embedded", version.ref = "z-xing" }


# ---- Navigation / Windowing ----
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" } # Compose Nav
androidx-window = { group = "androidx.window", name = "window", version.ref = "window" }                                  # Fold/hinge metrics

# ---- AndroidX app fundamentals ----
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }                 # Kotlin extensions for Android core
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" } # Lifecycle + coroutines
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" } # setContent(), back handling

# ---- Testing ----
junit = { group = "junit", name = "junit", version.ref = "junit" }                                         # JVM unit tests
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }              # AndroidX JUnit runner
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" } # UI tests
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }                        # Compose testing (from BOM)
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics", version.ref = "uiGraphics" }
androidx-compose-foundation-layout = { group = "androidx.compose.foundation", name = "foundation-layout", version.ref = "foundationLayout" }                    # Debug-only manifest for Compose tests

#############################
# Plugins
#############################
[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }  # Android app plugin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" } # Kotlin Android plugin
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" } # Compose compiler plugin
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Hilt Gradle plugin
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
